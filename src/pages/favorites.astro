---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Movie Database - Your Favorites">
  <div class="container py-4">
    <div class="row mb-4">
      <div class="col-12">
        <h1 class="mb-2">Your Favorites</h1>
        <p class="text-muted">Movies you've saved to watch later</p>
      </div>
    </div>

    <div id="emptyFavorites" class="text-center py-5 d-none">
      <div class="empty-favorites">
        <i class="bi bi-heart text-danger mb-3"></i>
        <h3>No Favorites Yet</h3>
        <p class="text-muted mb-4">You haven't added any movies to your favorites list.</p>
        <a href="/movies" class="btn btn-primary">
          <i class="bi bi-film me-2"></i>Browse Movies
        </a>
      </div>
    </div>

    <div id="favoritesList" class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4">
      <!-- Favorites will be loaded here via JavaScript -->
    </div>
  </div>
</Layout>

<script is:inline>
  // DOM elements
  const favoritesList = document.getElementById('favoritesList');
  const emptyFavorites = document.getElementById('emptyFavorites');
  
  // Load favorites from localStorage
  function loadFavorites() {
    const favorites = JSON.parse(localStorage.getItem('favorites') || '[]');
    
    if (favorites.length === 0) {
      if (emptyFavorites) {
        emptyFavorites.classList.remove('d-none');
      }
      return;
    }
    
    if (favoritesList) {
      favoritesList.innerHTML = '';
      
      favorites.forEach(movie => {
        const posterUrl = movie.poster_path 
          ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` 
          : '/placeholder.svg';
        
        const movieCard = document.createElement('div');
        movieCard.className = 'col';
        movieCard.innerHTML = `
          <div class="card h-100 movie-card">
            <div class="position-relative">
              <img src="${posterUrl}" class="card-img-top" alt="${movie.title} poster">
              <div class="rating-badge position-absolute top-0 end-0 m-2 bg-dark text-white px-2 py-1 rounded-pill">
                <i class="bi bi-star-fill text-warning me-1"></i>
                <span>${movie.vote_average.toFixed(1)}</span>
              </div>
            </div>
            <div class="card-body d-flex flex-column">
              <h5 class="card-title">${movie.title}</h5>
              <div class="progress mt-2 mb-3" style="height: 5px;">
                <div class="progress-bar bg-success" role="progressbar" style="width: ${Math.round(movie.vote_average * 10)}%" 
                  aria-valuenow="${Math.round(movie.vote_average * 10)}" aria-valuemin="0" aria-valuemax="100"></div>
              </div>
              <div class="mt-auto d-flex justify-content-between">
                <a href="/movies/${movie.id}" class="btn btn-primary btn-sm">
                  <i class="bi bi-info-circle me-1"></i> Details
                </a>
                <button class="btn btn-outline-danger btn-sm remove-favorite-btn" data-movie-id="${movie.id}">
                  <i class="bi bi-heart-fill me-1"></i> Remove
                </button>
              </div>
            </div>
          </div>
        `;
        
        favoritesList.appendChild(movieCard);
      });
      
      // Add event listeners to remove buttons
      document.querySelectorAll('.remove-favorite-btn').forEach(btn => {
        btn.addEventListener('click', function() {
          const movieId = this.getAttribute('data-movie-id');
          if (movieId) {
            removeFavorite(movieId);
          }
        });
      });
    }
  }
  
  // Remove a movie from favorites
  function removeFavorite(movieId) {
    let favorites = JSON.parse(localStorage.getItem('favorites') || '[]');
    const index = favorites.findIndex(movie => movie.id == movieId);
    
    if (index !== -1) {
      const movieTitle = favorites[index].title;
      favorites.splice(index, 1);
      localStorage.setItem('favorites', JSON.stringify(favorites));
      
      // Show a simple alert
      const alertEl = document.createElement('div');
      alertEl.className = 'alert alert-success alert-dismissible fade show';
      alertEl.innerHTML = `
        <strong>Success!</strong> Removed "${movieTitle}" from favorites.
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
      `;
      
      // Insert at the top of the container
      const container = document.querySelector('.container');
      if (container && container.firstChild) {
        container.insertBefore(alertEl, container.firstChild);
      }
      
      // Auto dismiss after 3 seconds
      setTimeout(() => {
        if (alertEl.parentNode) {
          alertEl.parentNode.removeChild(alertEl);
        }
      }, 3000);
      
      // Reload the favorites list
      loadFavorites();
      
      // Show empty state if no favorites left
      if (favorites.length === 0 && emptyFavorites) {
        emptyFavorites.classList.remove('d-none');
      }
    }
  }
  
  // Initialize on page load
  document.addEventListener('DOMContentLoaded', loadFavorites);
  
  // Listen for storage events (in case favorites are updated in another tab)
  window.addEventListener('storage', event => {
    if (event.key === 'favorites') {
      loadFavorites();
    }
  });
</script>

<style>
  /* Basic styles */
  .card-img-top {
    height: 300px;
    object-fit: cover;
  }

  .card-title {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    margin-bottom: 1rem;
  }

  .movie-card {
    transition: transform 0.2s ease, box-shadow 0.2s ease;
  }

  .movie-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
  }

  /* Empty state */
  .empty-favorites {
    padding: 3rem 0;
  }

  .empty-favorites .bi-heart {
    font-size: 3rem;
    display: block;
  }

  /* Alert styles */
  .alert {
    margin-bottom: 1rem;
  }
</style>
